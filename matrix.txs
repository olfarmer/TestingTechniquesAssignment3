{-
TorXakis - Model Based Testing
Copyright (c) 2015-2021 ESI (TNO) and Radboud University
See LICENSE at root directory of this repository.
-}

-- ----------------------------------------------------------------------------------------- --
-- Model of a part of Matrix Client-Server API


TYPEDEF  Op   ::=   Start
                  | Stop
                  | CreateUser { name :: String; password :: String }
                  | LoginUser { loginName :: String; loginPassword :: String }
                  | CreateRoom { userName :: String; roomName :: String }
                  | SendMessage { senderName :: String; targetRoom :: String; message :: String}
ENDDEF

-- ----------------------------------------------------------------------------------------- --

FUNCDEF isValidUsername ( val :: String ) :: Bool
 ::=
    strinre(val, REGEX('[a-zA-Z0-9_.-]+') )
ENDDEF

FUNCDEF isValidRoomname ( val :: String ) :: Bool
 ::=
    strinre(val, REGEX('[a-zA-Z0-9_.-!?&$;]+') )
ENDDEF

FUNCDEF isValidPassword ( val :: String ) :: Bool
 ::=
    strinre(val, REGEX('.{1,50}') )
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- channel definitions

CHANDEF  Channels  ::=    In   :: Op
                        ; Out  :: String
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- state automaton definition

STAUTDEF matrixStaut [ Inp :: Op; Outp :: String ] ( )
  ::=
    STATE
        stopped, started, starting, stopping, creatingUser, createdUser, loggingIn, loggedIn, creatingRoom, createdRoom, sendingMessage
    VAR
        started :: Bool;
        userName :: String;
        password :: String;
        roomName :: String
    INIT
        stopped { started := False; userName := "" ; password := ""; roomName := "" }
    TRANS
        started  ->  Inp ? op [[ IF isCreateUser(op) THEN (isValidUsername(name(op)) /\ isValidPassword(password(op))) ELSE False FI ]] {userName := name(op); password := password(op)}  ->  creatingUser
        creatingUser -> Outp ! "created" -> createdUser
        createdUser -> ISTEP -> started
        createdUser -> Inp ? op [[ IF isLoginUser(op) THEN (loginName(op) == userName /\ (loginPassword(op) == password) /\ (not(loginName(op) == ""))) ELSE False FI ]] -> loggingIn
        loggingIn -> Outp ! "loggedIn" -> loggedIn
        loggedIn -> Inp ? op [[ IF isCreateRoom(op) THEN ((userName(op) == userName)) ELSE False FI ]] {roomName := roomName(op)}  ->  creatingRoom
        creatingRoom -> Outp ! "created" -> createdRoom
        createdRoom -> Inp ? op [[ IF isSendMessage(op) THEN (senderName(op) == userName /\ (targetRoom(op) == roomName)) ELSE False FI ]] -> sendingMessage
        sendingMessage -> Outp ! "sent" -> createdRoom
        createdRoom -> ISTEP -> started
        started  ->  Inp ? op [[ isStop(op) ]]  ->  stopping
        stopped  ->  Inp ? op [[ isStart(op) ]]  ->  starting
        starting -> Outp ! "started" -> started
        stopping -> Outp ! "stopped" -> stopped
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- model definition for the Matrix system

MODELDEF  Matrix
   ::=
        CHAN IN    In
        CHAN OUT   Out

        BEHAVIOUR  matrixStaut [ In, Out ] ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- definition of the tester connection to the sut

CNECTDEF  Sut
   ::=
        CLIENTSOCK

        CHAN  OUT  In                         HOST "localhost"  PORT 7890
        ENCODE     In ? op               ->  ! toString(op)

        CHAN  IN   Out                        HOST "localhost"  PORT 7890
        DECODE     Out ! fromString(s)   <-   ? s
ENDDEF


-- ----------------------------------------------------------------------------------------- --
-- Test Purpose
-- ----------------------------------------------------------------------------------------- --

PURPDEF  Purp ::=
        CHAN IN    In
        CHAN OUT   Out

        GOAL m1  ::=  In !Start     >->  Out ?r  >->
                      In !CreateUser("tester","tester123")     >->  Out ?r  >->
                      In !LoginUser("tester","tester123")     >->  Out ?r  >->
                      In !CreateRoom("tester","")     >->  Out ?r  >->  HIT
ENDDEF
